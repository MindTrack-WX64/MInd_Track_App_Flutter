import 'package:flutter/material.dart';
import '../../model/diagnosis.dart';
import '../../services/diagnosis-service.dart';

class DiagnosisNewPage extends StatefulWidget {
  final int patientId;

  const DiagnosisNewPage({Key? key, required this.patientId}) : super(key: key);

  @override
  _DiagnosisNewPageState createState() => _DiagnosisNewPageState();
}

class _DiagnosisNewPageState extends State<DiagnosisNewPage> {
  final _formKey = GlobalKey<FormState>();
  final _diagnosisController = TextEditingController();
  final _dateController = TextEditingController();
  final DiagnosisService _diagnosisService = DiagnosisService();

  @override
  void dispose() {
    _diagnosisController.dispose();
    _dateController.dispose();
    super.dispose();
  }

  Future<void> _submitForm() async {
    if (_formKey.currentState!.validate()) {
      final newDiagnosis = Diagnosis(
        id: 0, // Assuming the ID is auto-generated by the server
        patientId: widget.patientId,
        diagnosis: _diagnosisController.text,
        date: _dateController.text,
      );

      try {
        await _diagnosisService.addDiagnosis(newDiagnosis);
        Navigator.pop(context, true); // Return to the previous page with success
      } catch (e) {
        ScaffoldMessenger.of(context).showSnackBar(
          SnackBar(content: Text('Failed to add diagnosis: $e')),
        );
      }
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Add New Diagnosis'),
      ),
      body: Padding(
        padding: const EdgeInsets.all(16.0),
        child: Form(
          key: _formKey,
          child: Column(
            children: [
              TextFormField(
                controller: _diagnosisController,
                decoration: InputDecoration(labelText: 'Diagnosis'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a diagnosis';
                  }
                  return null;
                },
              ),
              TextFormField(
                controller: _dateController,
                decoration: InputDecoration(labelText: 'Date'),
                validator: (value) {
                  if (value == null || value.isEmpty) {
                    return 'Please enter a date';
                  }
                  return null;
                },
              ),
              SizedBox(height: 20),
              ElevatedButton(
                onPressed: _submitForm,
                child: Text('Add Diagnosis'),
              ),
            ],
          ),
        ),
      ),
    );
  }
}